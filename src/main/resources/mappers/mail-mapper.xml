<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mailMapper">
	
	<resultMap id="MailResultSet" type="Mail">
		<id property="mailNum" column="mail_num"/>
		<result property="empId" column="emp_id"/>
		<result property="mailFrom" column="mail_from"/>
		<result property="mailTo" column="mail_to"/>
		<result property="fromEmp" column="from_Emp"/>
		<result property="toEmp" column="to_Emp"/>
		<result property="ccEmp" column="cc_Emp"/>
		<result property="mailCc" column="mail_cc"/>
		<result property="mailTitle" column="mail_title"/>
		<result property="mailContent" column="mail_content"/>
		<result property="originalFileName" column="original_filename"/>
		<result property="renameFileName" column="rename_filename"/>
		<result property="mailDate" column="mail_date"/>
		<result property="mailType" column="mail_type"/>
		<result property="mailImportant" column="mail_important"/>

	</resultMap>
	
	<!-- 페이징 처리 -->
	<select id="getListCount" parameterType="Mail" resultType="_int">
		SELECT count(*)
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE emp_id=#{empId}
			<if test="mailTo != null">
				and (mail_to = #{mailTo} or mail_cc = #{mailTo}) and status='Y'
			</if>
			<if test="mailFrom != null">
				and mail_from = #{mailFrom} and status='Y'
			</if>
			<if test="status != null">
				and status = #{status} 
			</if>
			<if test="mailImportant != 0">
				and mail_important = #{mailImportant} and status='Y'
			</if>
	</select>
	
	<!-- 받은 메일함 조회 -->
	<select id="receiveMailList" parameterType="Mail" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_CC, MAIL_TITLE, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE EMP_ID=#{empId}
		<if test="mailTo != null">
			and (mail_to = #{mailTo} or mail_cc = #{mailTo}) and status='Y'
		</if>
		<if test="mailFrom != null">
			and mail_from = #{mailFrom} and status='Y'
		</if>
		<if test="status != null">
			and status = #{status} 
		</if>
		<if test="mailImportant != 0">
			and mail_important = #{mailImportant} and status='Y'
		</if>
		ORDER BY MAIL_NUM DESC
	</select>
	
	<!-- 보낸 메일함 조회 -->
	<select id="sendMailList" parameterType="Mail" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_TITLE, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE EMP_ID=#{empId}
		<if test="mailTo != null">
			and (mail_to = #{mailTo} or mail_cc = #{mailTo}) and status='Y'
		</if>
		<if test="mailFrom != null">
			and mail_from = #{mailFrom} and status='Y'
		</if>
		<if test="status != null">
			and status = #{status} 
		</if>
		<if test="mailImportant != 0">
			and mail_important = #{mailImportant} and status='Y'
		</if>
		ORDER BY MAIL_NUM DESC
	</select>
	
	<!-- 휴지통 조회 -->
	<select id="deleteMailList" parameterType="Employee" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_CC, MAIL_TITLE, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE STATUS='N' AND EMP_ID=#{empId}
		ORDER BY MAIL_NUM DESC
	</select>
	
	<!-- 메일 완전 삭제시, 메일 셀렉 -->
	<select id="selectMail" parameterType="Mail" resultMap="MailResultSet">
		select *
		from mail
		where mail_num=#{mailNum}
	</select>
	
	<!-- tomail empid, ccMmail empid 받아오기 -->
	<select id="selectEmpId" parameterType="String" resultType="_int">
		select emp_id
		from employee
		where email = #{email}
	</select>
	
	<!-- 메일 보내기 -->
	<insert id="insertMail" parameterType="Mail">
		insert into mail
		values (mail_seq.nextval,#{mailFrom},#{mailTo},#{mailCc},#{mailTitle},#{mailContent},
		        #{originalFileName},#{renameFileName},sysdate,default)
	</insert>
	
	<!-- 메일 삭제 테이블 인서트 -->
	<insert id="insertStatusMail" parameterType="_int">
		insert into mail_del
		values (mail_seq.currval,#{empId},default,default)
	</insert>
	
	<!-- 메일함 디테일 -->
	<select id="receiveDetail" parameterType="Mail" resultMap="MailResultSet">
		select *
		from mail_detail
		where mail_num=#{mailNum} and emp_id=#{empId}
	</select>
	
	<!-- 메일 검색결과 게시글 수 조회용 쿼리문 -->
	<select id="selectSearchCount" parameterType="Mail" resultType="_int">
		select count(*)
		from mail
		join mail_del using(mail_num)
		where emp_id=#{empId}
		<if test="mailFrom != null "> <!-- 보낸메일 -->
			and mail_from=#{mailFrom} and status='Y'
		</if>
		<if test="mailTo != null"> <!-- 받은메일 -->
			and (mail_to = #{mailTo} or mail_cc = #{mailTo}) and status='Y'
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="mailImportant != 0">
			and mail_important = #{mailImportant} and status='Y'
		</if>
		<choose>
			<when test="writer != null">
				and mail_from like '%' || #{writer} || '%'
			</when>
			<when test="receiver != null">
				and (mail_to like '%' || #{receiver} || '%'
				or mail_cc like '%' || #{receiver} || '%')
			</when>
			<when test="title != null">
				and mail_title like '%' || #{title} || '%'
			</when>
			<when test="content != null">
				and mail_content like '%' || #{content} || '%'
			</when>
		</choose>
		order by mail_num desc
	</select>
	
	<!-- 메일 검색결과에 해당하는 받은, 보낸 메일함 목록 조회 -->
	<select id="selectSearchList" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_TITLE, MAIL_CONTENT, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE EMP_ID=#{empId}
		<if test="mailFrom != null "> <!-- 보낸메일 -->
			and mail_from=#{mailFrom} and status='Y'
		</if>
		<if test="mailTo != null"> <!-- 받은메일 -->
			and (mail_to = #{mailTo} or mail_cc = #{mailTo}) and status='Y'
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="mailImportant != 0">
			and mail_important = #{mailImportant} and status='Y'
		</if>
		<choose>
			<when test="writer != null">
				and mail_from like '%' || #{writer} || '%'
			</when>
			<when test="receiver != null">
				and (mail_to like '%' || #{receiver} || '%'
				or mail_cc like '%' || #{receiver} || '%')
			</when>
			<when test="title != null">
				and mail_title like '%' || #{title} || '%'
			</when>
			<when test="content != null">
				and mail_content like '%' || #{content} || '%'
			</when>
		</choose>
		order by mail_num desc
	</select>
	
	<!-- 메일 검색결과에 해당하는 휴지통 목록 조회 -->
	<select id="deleteSearchList" parameterType="Mail" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_TITLE, MAIL_CONTENT, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE EMP_ID=#{empId} and status='N'
		<choose>
			<when test="writer != null">
				and mail_from like '%' || #{writer} || '%'
			</when>
			<when test="receiver != null">
				and (mail_to like '%' || #{receiver} || '%'
				or mail_cc like '%' || #{receiver} || '%')
			</when>
			<when test="title != null">
				and mail_title like '%' || #{title} || '%'
			</when>
			<when test="content != null">
				and mail_content like '%' || #{content} || '%'
			</when>
		</choose>
		order by mail_num desc
	</select>
	
	<!-- 메일함 휴지통 이동 -->
	<update id="updateMail" parameterType="Mail">
		update mail_del
		set status='N'
		where mail_num=#{mailNum} and emp_id=#{empId}
	</update>
	
	<!-- 메일 완전 삭제 -->
	<delete id="deleteMail" parameterType="Mail">
		delete from mail_del
		where mail_num=#{mailNum} and emp_id=#{empId}
	</delete>
	
	<!-- 메일 복구 -->
	<update id="restoreMail" parameterType="Mail">
		update mail_del
		set status='Y'
		where mail_num=#{mailNum} and emp_id=#{empId}
	</update>
	
	<!-- 중요메일 변경 -->
	<update id="updateImportant" parameterType="Mail">
		update mail_del
		set mail_important=#{mailImportant}
		where mail_num=#{mailNum} and emp_id=#{empId} and status='Y'
	</update>
	
	<!-- 중요메일함 셀렉 -->
	<select id="importantMailList" parameterType="Employee" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_CC, MAIL_TITLE, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE MAIL_IMPORTANT=1 AND EMP_ID=#{empId} and status='Y'
		ORDER BY MAIL_NUM DESC
	</select>
	
	<!-- 중요메일함 검색 -->
	<select id="importantSearchList" parameterType="Mail" resultMap="MailResultSet">
		SELECT MAIL_NUM, EMP_ID, MAIL_FROM, MAIL_TO, MAIL_TITLE, MAIL_CONTENT, MAIL_DATE, MAIL_IMPORTANT, RENAME_FILENAME, STATUS
		FROM MAIL
		JOIN MAIL_DEL USING(MAIL_NUM)
		WHERE EMP_ID=#{empId} and mail_important=#{mailImportant}
		<if test="mailFrom != null "> <!-- 보낸메일 -->
			and mail_from=#{mailFrom} and status='Y'
		</if>
		<if test="mailTo != null"> <!-- 받은메일 -->
			and (mail_to = #{mailTo} or mail_cc = #{mailTo}) and status='Y'
		</if>
		<if test="status != null">
			and status = #{status}
		</if>
		<if test="mailImportant != 0">
			and mail_important = #{mailImportant} and status='Y'
		</if>
		<choose>
			<when test="writer != null">
				and mail_from like '%' || #{writer} || '%'
			</when>
			<when test="receiver != null">
				and (mail_to like '%' || #{receiver} || '%'
				or mail_cc like '%' || #{receiver} || '%')
			</when>
			<when test="title != null">
				and mail_title like '%' || #{title} || '%'
			</when>
			<otherwise>
				and mail_content like '%' || #{content} || '%'
			</otherwise>
		</choose>
		order by mail_num desc
	</select>
	
	<!-- 전체메일 검색 -->
	<select id="selectMyMail" parameterType="Employee" resultMap="MailResultSet">
		select * from MAIL_VIEW where mail_to=#{email} and emp_id=#{empId}
	</select>
	
	
	
	
	

</mapper>
